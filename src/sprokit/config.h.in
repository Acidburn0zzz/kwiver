/*ckwg +5
 * Copyright 2011-2013 by Kitware, Inc. All Rights Reserved. Please refer to
 * KITWARE_LICENSE.TXT for licensing information, or contact General Counsel,
 * Kitware, Inc., 28 Corporate Drive, Clifton Park, NY 12065.
 */

#ifndef SPROKIT_CONFIG_H
#define SPROKIT_CONFIG_H

/**
 * \file config.h
 *
 * \brief Macros for symbol management in sprokit.
 */

/**
 * \def SPROKIT_EXPORT
 *
 * \brief Export a symbol for use outside the library.
 */
/**
 * \def SPROKIT_IMPORT
 *
 * \brief Use a symbol from another library.
 */
/**
 * \def SPROKIT_NO_EXPORT
 *
 * \brief Hide the symbol from outside the library.
 */
/**
 * \def SPROKIT_DEPRECATED
 *
 * \brief Mark the symbol as deprecated.
 *
 * \param msg A message about the deprecation.
 */
/**
 * \def SPROKIT_NO_RETURN
 *
 * \brief The function will never return.
 */
/**
 * \def SPROKIT_MUST_USE_RESULT
 *
 * \brief The return value of the function must be used.
 */
/**
 * \def SPROKIT_UNUSED
 *
 * \brief The function may be unreferenced.
 */
/**
 * \def SPROKIT_NOTHROW
 *
 * \brief The function may not throw exceptions.
 */

// Visibility macros.
#cmakedefine SPROKIT_HAVE_GCC_VISIBILITY
#if defined(_WIN32) || defined(_WIN64)
#define SPROKIT_EXPORT __declspec(dllexport)
#define SPROKIT_IMPORT __declspec(dllimport)
#define SPROKIT_NO_EXPORT
#elif defined(SPROKIT_HAVE_GCC_VISIBILITY)
#define SPROKIT_EXPORT __attribute__((__visibility__("default")))
#define SPROKIT_IMPORT __attribute__((__visibility__("default")))
#define SPROKIT_NO_EXPORT __attribute__((__visibility__("hidden")))
#else
// Unsupported.
#define SPROKIT_EXPORT
// Unsupported.
#define SPROKIT_IMPORT
// Unsupported.
#define SPROKIT_NO_EXPORT
#endif

// Deprecation macros.
#if defined(_WIN32) || defined(_WIN64)
#define SPROKIT_DEPRECATED(msg) __declspec(deprecated(msg))
#elif defined(__clang__)
#if __has_extension(attribute_deprecated_with_message)
#define SPROKIT_DEPRECATED(msg) __attribute__((__deprecated__(msg)))
#else
#define SPROKIT_DEPRECATED(msg) __attribute__((__deprecated__))
#endif
#elif defined(__GNUC__)
#define SPROKIT_DEPRECATED(msg) __attribute__((__deprecated__(msg)))
#else
// Unsupported.
#define SPROKIT_DEPRECATED(msg)
#endif

// Support macros.
#if defined(_WIN32) || defined(_WIN64)
#define SPROKIT_NO_RETURN __declspec(noreturn)
// Unsupported.
#define SPROKIT_MUST_USE_RESULT
// Unsupported.
#define SPROKIT_UNUSED
#elif defined(__GNUC__)
#define SPROKIT_NO_RETURN __attribute__((__noreturn__))
#define SPROKIT_MUST_USE_RESULT __attribute__((__warn_unused_result__))
#define SPROKIT_UNUSED __attribute__((__unused__))
#else
// Unsupported.
#define SPROKIT_NO_RETURN
// Unsupported.
#define SPROKIT_MUST_USE_RESULT
// Unsupported.
#define SPROKIT_UNUSED
#endif

#if __cplusplus < 201103L
#define SPROKIT_NOTHROW throw ()
#else
#define SPROKIT_NOTHROW noexcept
#endif

#endif // SPROKIT_CONFIG_H
