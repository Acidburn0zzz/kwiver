/*ckwg +29
 * Copyright 2015 by Kitware, Inc.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *
 *  * Redistributions of source code must retain the above copyright notice,
 *    this list of conditions and the following disclaimer.
 *
 *  * Redistributions in binary form must reproduce the above copyright notice,
 *    this list of conditions and the following disclaimer in the documentation
 *    and/or other materials provided with the distribution.
 *
 *  * Neither name of Kitware, Inc. nor the names of any contributors may be used
 *    to endorse or promote products derived from this software without specific
 *    prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS ``AS IS''
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED. IN NO EVENT SHALL THE AUTHORS OR CONTRIBUTORS BE LIABLE FOR
 * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
 * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
 * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

#ifndef KWIVER_CONFIG_H
#define KWIVER_CONFIG_H

/**
 * \file config.h
 *
 * \brief Macros for symbol management in kwiver.
 */

/**
 * \def KWIVER_EXPORT
 *
 * \brief Export a symbol for use outside the library.
 */
/**
 * \def KWIVER_IMPORT
 *
 * \brief Use a symbol from another library.
 */
/**
 * \def KWIVER_NO_EXPORT
 *
 * \brief Hide the symbol from outside the library.
 */
/**
 * \def KWIVER_DEPRECATED
 *
 * \brief Mark the symbol as deprecated.
 *
 * \param msg A message about the deprecation.
 */
/**
 * \def KWIVER_NO_RETURN
 *
 * \brief The function will never return.
 */
/**
 * \def KWIVER_MUST_USE_RESULT
 *
 * \brief The return value of the function must be used.
 */
/**
 * \def KWIVER_UNUSED
 *
 * \brief The function may be unreferenced.
 */
/**
 * \def KWIVER_NOTHROW
 *
 * \brief The function may not throw exceptions.
 */

// Visibility macros.
#cmakedefine KWIVER_HAVE_GCC_VISIBILITY
#if defined(_WIN32) || defined(_WIN64)
#define KWIVER_EXPORT __declspec(dllexport)
#define KWIVER_IMPORT __declspec(dllimport)
#define KWIVER_NO_EXPORT
#elif defined(KWIVER_HAVE_GCC_VISIBILITY)
#define KWIVER_EXPORT __attribute__((__visibility__("default")))
#define KWIVER_IMPORT __attribute__((__visibility__("default")))
#define KWIVER_NO_EXPORT __attribute__((__visibility__("hidden")))
#else
// Unsupported.
#define KWIVER_EXPORT
// Unsupported.
#define KWIVER_IMPORT
// Unsupported.
#define KWIVER_NO_EXPORT
#endif

// Deprecation macros.
#if defined(_WIN32) || defined(_WIN64)
#define KWIVER_DEPRECATED(msg) __declspec(deprecated(msg))
#elif defined(__clang__)
#if __has_extension(attribute_deprecated_with_message)
#define KWIVER_DEPRECATED(msg) __attribute__((__deprecated__(msg)))
#else
#define KWIVER_DEPRECATED(msg) __attribute__((__deprecated__))
#endif
#elif defined(__GNUC__)
#if (__GNUC__ >= 5) || ((__GNUC__ == 4) && (__GNUC_MINOR__ >= 5))
#define KWIVER_DEPRECATED(msg) __attribute__((__deprecated__(msg)))
#else
#define KWIVER_DEPRECATED(msg) __attribute__((__deprecated__))
#endif
#else
// Unsupported.
#define KWIVER_DEPRECATED(msg)
#endif

// Support macros.
#if defined(_WIN32) || defined(_WIN64)
#define KWIVER_NO_RETURN __declspec(noreturn)
// Unsupported.
#define KWIVER_MUST_USE_RESULT
// Unsupported.
#define KWIVER_UNUSED
#elif defined(__GNUC__)
#define KWIVER_NO_RETURN __attribute__((__noreturn__))
#define KWIVER_MUST_USE_RESULT __attribute__((__warn_unused_result__))
#define KWIVER_UNUSED __attribute__((__unused__))
#else
// Unsupported.
#define KWIVER_NO_RETURN
// Unsupported.
#define KWIVER_MUST_USE_RESULT
// Unsupported.
#define KWIVER_UNUSED
#endif

#if __cplusplus < 201103L
#define KWIVER_NOTHROW throw ()
#else
#define KWIVER_NOTHROW noexcept
#endif

#endif // KWIVER_CONFIG_H
